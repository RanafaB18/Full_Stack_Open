{"ast":null,"code":"var _jsxFileName = \"/home/ranafa/FullStackOpen/Full_Stack_Open/part2/src/components/Course.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Course = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Course;\nconst Header = _ref2 => {\n  let {\n    name\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Header;\nconst Content = _ref3 => {\n  let {\n    parts\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parts.map(part => {\n      return /*#__PURE__*/_jsxDEV(Part, {\n        part: part.name,\n        exercise: part.exercises\n      }, part.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Content;\nconst Part = _ref4 => {\n  let {\n    part,\n    exercise\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part, \" \", exercise]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Part;\nconst Total = _ref5 => {\n  let {\n    parts\n  } = _ref5;\n  const total = parts.reduce((accum, currentValue) => accum + currentValue, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [\"total of \", total, \" \", \"exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Total;\nexport default Course;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Part\");\n$RefreshReg$(_c5, \"Total\");","map":{"version":3,"names":["React","Course","course","name","parts","Header","Content","map","part","exercises","id","Part","exercise","Total","total","reduce","accum","currentValue"],"sources":["/home/ranafa/FullStackOpen/Full_Stack_Open/part2/src/components/Course.js"],"sourcesContent":["import React from \"react\";\n\nconst Course = ({ course }) => {\n  return (\n    <div>\n      <Header name={course.name} />\n      <Content parts={course.parts} />\n      <Total parts={course.parts} />\n    </div>\n  );\n};\n\nconst Header = ({ name }) => {\n  return <h1>{name}</h1>;\n};\n\nconst Content = ({ parts }) => {\n  return (\n    <div>\n      {parts.map((part) => {\n        return (\n          <Part key={part.id} part={part.name} exercise={part.exercises} />\n        );\n      })}\n      {/* <Part part={parts[0].name} exercise={parts[0].exercises} />\n      <Part part={parts[1].name} exercise={parts[1].exercises} />\n      <Part part={parts[2].name} exercise={parts[2].exercises} /> */}\n    </div>\n  );\n};\n\nconst Part = ({ part, exercise }) => {\n  return (\n    <p>\n      {part} {exercise}\n    </p>\n  );\n};\n\nconst Total = ({ parts }) => {\n    const total = parts.reduce((accum, currentValue) => accum + currentValue, 0)\n  return (\n    <p>\n      <b>\n        total of {total}{\" \"}\n        exercises\n      </b>\n    </p>\n  );\n};\nexport default Course;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EACxB,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,IAAI,EAAEA,MAAM,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAC7B,QAAC,OAAO;MAAC,KAAK,EAAED,MAAM,CAACE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC,QAAC,KAAK;MAAC,KAAK,EAAEF,MAAM,CAACE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1B;AAEV,CAAC;AAAC,KARIH,MAAM;AAUZ,MAAMI,MAAM,GAAG,SAAc;EAAA,IAAb;IAAEF;EAAK,CAAC;EACtB,oBAAO;IAAA,UAAKA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAM;AACxB,CAAC;AAAC,MAFIE,MAAM;AAIZ,MAAMC,OAAO,GAAG,SAAe;EAAA,IAAd;IAAEF;EAAM,CAAC;EACxB,oBACE;IAAA,UACGA,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;MACnB,oBACE,QAAC,IAAI;QAAe,IAAI,EAAEA,IAAI,CAACL,IAAK;QAAC,QAAQ,EAAEK,IAAI,CAACC;MAAU,GAAnDD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAA+C;IAErE,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAIE;AAEV,CAAC;AAAC,MAbIJ,OAAO;AAeb,MAAMK,IAAI,GAAG,SAAwB;EAAA,IAAvB;IAAEH,IAAI;IAAEI;EAAS,CAAC;EAC9B,oBACE;IAAA,WACGJ,IAAI,EAAC,GAAC,EAACI,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AAER,CAAC;AAAC,MANID,IAAI;AAQV,MAAME,KAAK,GAAG,SAAe;EAAA,IAAd;IAAET;EAAM,CAAC;EACpB,MAAMU,KAAK,GAAGV,KAAK,CAACW,MAAM,CAAC,CAACC,KAAK,EAAEC,YAAY,KAAKD,KAAK,GAAGC,YAAY,EAAE,CAAC,CAAC;EAC9E,oBACE;IAAA,uBACE;MAAA,WAAG,WACQ,EAACH,KAAK,EAAE,GAAG,EAAC,WAEvB;IAAA;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QACF;AAER,CAAC;AAAC,MAVID,KAAK;AAWX,eAAeZ,MAAM;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}